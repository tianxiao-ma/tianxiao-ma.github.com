diff --git a/_config.yml b/_config.yml
index 5ad1235..decb852 100644
--- a/_config.yml
+++ b/_config.yml
@@ -1,3 +1 @@
-permalink: /:year/:month/:title/
 markdown: rdiscount
-paginate: 5
diff --git a/_layouts/default.html b/_layouts/default.html
deleted file mode 100755
index 1e14509..0000000
--- a/_layouts/default.html
+++ /dev/null
@@ -1,18 +0,0 @@
-<!DOCTYPE html>
-<html lang="zh">
-<head>
-  <meta charset="UTF-8">
-  <title>{% if page.title != 'Home' %}{{ page.title }} | {% endif %}tianxiao's blog</title>
-  <link rel="shortcut icon" href="/favicon.ico">
-  <meta name="description" content="{{ page.title }}">
-  <meta name="author" content="tianxiao | tianxiao.matx@gmail.com">
-  <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
-</head>
-
-<body>
-  <div class="content" id="content" role="main">
-    {{ content }}
-  </div><!-- .content -->
-
-</body>
-</html>
diff --git a/_layouts/post.html b/_layouts/post.html
deleted file mode 100755
index d791e10..0000000
--- a/_layouts/post.html
+++ /dev/null
@@ -1,30 +0,0 @@
----
-layout: default
----
-<div class="full">
-  <h1 class="entry-title"><a href="{{ page.url }}" title="{{ page.title }}" rel="bookmark">{{ page.title }}</a></h1>
-  <h2 class="byline date full-date publish-info" title="{{ page.date }}">{{ page.date | date_to_string }}</h2>
-  <div class="entry-content full-content">
-    {{ content }}
-  </div>
-  <footer class="meta">
-    Posted in&nbsp;
-    {% for category in page.categories %}
-    <a href="/categories/{{ category }}" title="{{ category }}" rel="category tag">{{ category }}</a>
-    {% endfor %}
-  </footer>
-</div>
-
-<div id="disqus_thread"></div>
-<script type="text/javascript">
-  var disqus_shortname = 'weedygarden';
-  var disqus_url = "http://weedygarden.net{{page.url}}";
-
-  (function() {
-      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
-      dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
-      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
-  })();
-</script>
-<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
-<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>
\ No newline at end of file
diff --git a/_posts/2012-12-28-hello-jekyll.md b/_posts/2012-12-28-hello-jekyll.md
deleted file mode 100755
index f7d6a32..0000000
--- a/_posts/2012-12-28-hello-jekyll.md
+++ /dev/null
@@ -1,45 +0,0 @@
----
-title: Hello Jekyll, Goodbye Wordpress
-layout: post
-permalink: /2012/12/hello-jekyll/
-categories: [Web Development, Ruby]
-date: Wen Jan 29 21:59:40 GMT+8 2013
----
-中文中文
-My holiday vacation project this year was to migrate this blog off Wordpress into a system that better fits my brain. After quite a bit of research I decided on [Jekyll][1]. I decided to move off Wordpress because I often found myself fighting with the admin and editor just to do simple things. I was fine working in the HTML view, but I prefer the simplicity of writing in Textile or Markdown.
-
-So why Jekyll?
-
-1. I can write my posts in [Markdown][2].
-2. It uses [Liquid][3] for its templating. I've been using Liquid for a long time, so I'm very comfortable with it.
-3. Jekyll sites can be hosted for free on [GitHub Pages][4].
-
-## Moving out of Wordpress
-
-First thing I did was install the [Disqus][5] plugin and migrate my legacy comments into it. This allowed me to keep my comment history. Second I installed the [Wordpress to Jekyll plugin][6]. This handy little plugin provides an export option that will produce a zip file containing all posts and pages nicely coverted to Markdown. What it doesn't do is bring any associated images along with it. That has to be done manually. I moved my wp-content images into a root "images" folder and did a simple find/replace to update the paths. Depending on the complexity of your posts, you may be golden at that point. I had to fix around five or six posts which contained either bad characters or messy converted Markdown.
-
-## Moving into Jekyll
-
-If you're not married to your theme, you might be better off using [Jekyll Bootstrap][7]. Even if you don't use it, Jekyll Bootstrap has a lot of good info. I chose to keep my previous theme, so that added some time to my migration. Once I had everything set up and running locally, [I set up my GitHub repo][8], [pointed the A record with my domain name provider][9] and I was off to the races. The only issue I have with using GitHub Pages is that [they don't allow custom plugins][10]. There are a couple of features I had to forego because of this, but I'm willing to accept this in the short term.
-
-## Conclusion
-
-Even though this is only the first post created using the new system, I think it's going to work out quite well.
-
-## Resources
-
-* [Jekyll project on GitHub][1]
-* [Wordpress to Jekyll Exporter][6]
-* [Using Jekyll with GitHub Pages][8]
-* [Jekyll Bootstrap][7]
-
- [1]: https://github.com/mojombo/jekyll
- [2]: http://daringfireball.net/projects/markdown/
- [3]: http://wiki.shopify.com/UsingLiquid
- [4]: http://pages.github.com/
- [5]: http://wordpress.org/extend/plugins/disqus-comment-system/
- [6]: https://github.com/benbalter/wordpress-to-jekyll-exporter
- [7]: http://jekyllbootstrap.com/
- [8]: https://help.github.com/articles/using-jekyll-with-pages
- [9]: https://help.github.com/articles/setting-up-a-custom-domain-with-pages
- [10]: https://github.com/mojombo/jekyll/issues/325
diff --git a/index.html b/index.html
index 8f6b297..fb24e65 100644
--- a/index.html
+++ b/index.html
@@ -1,30 +1,59 @@
----
-title: Home
-layout: default
----
-{% for post in paginator.posts %}
-
-   <!-- here add you post markup -->
-   <h1><a href="{{ post.url }}">{{ post.title }}</a></h1>
-   <p class="author">
-    <span class="date">{{post.date}}</span>
-  </p>
-  <div class="content">
-    {{ post.content }}
-  </div>
-{% endfor %}
-
-<!-- Pagination links -->
-<div class="pagination">
-  {% if paginator.previous_page %}
-    <a href="/page{{paginator.previous_page}}" class="previous">Previous</a>
-  {% else %}
-    <span class="previous">Previous</span>
-  {% endif %}
-  <span class="page_number ">Page: {{paginator.page}} of {{paginator.total_pages}}</span>
-  {% if paginator.next_page %}
-    <a href="/page{{paginator.next_page}}" class="next ">Next</a>
-  {% else %}
-    <span class="next ">Next</span>
-  {% endif %}
-</div>
\ No newline at end of file
+<!DOCTYPE html>
+<html>
+  <head>
+    <meta charset='utf-8'>
+    <meta http-equiv="X-UA-Compatible" content="chrome=1">
+
+    <link rel="stylesheet" type="text/css" href="stylesheets/stylesheet.css" media="screen" />
+    <link rel="stylesheet" type="text/css" href="stylesheets/pygment_trac.css" media="screen" />
+    <link rel="stylesheet" type="text/css" href="stylesheets/print.css" media="print" />
+
+    <title>tianxiao's blog</title>
+  </head>
+
+  <body>
+    <header>
+      <div class="container">
+        <h1>Tianxiao</h1>
+        <h2>Welcome to my blog, hope it's help!</h2>
+
+        <section id="downloads">
+          <a href="https://github.com/tianxiao-ma" class="btn btn-github"><span class="icon"></span>View on GitHub</a>
+        </section>
+      </div>
+    </header>
+
+    <div class="container">
+      <section id="main_content">
+        <h3>Welcome to GitHub Pages.</h3>
+
+<p>This automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:</p>
+
+<pre><code>$ cd your_repo_root/repo_name
+$ git fetch origin
+$ git checkout gh-pages
+</code></pre>
+
+<p>If you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.</p>
+
+<h3>Designer Templates</h3>
+
+<p>We've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.</p>
+
+<h3>Rather Drive Stick?</h3>
+
+<p>If you prefer to not use the automatic generator, push a branch named <code>gh-pages</code> to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.</p>
+
+<h3>Authors and Contributors</h3>
+
+<p>You can <a href="https://github.com/blog/821" class="user-mention">@mention</a> a GitHub username to generate a link to their profile. The resulting <code>&lt;a&gt;</code> element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (<a href="https://github.com/defunkt" class="user-mention">@defunkt</a>), PJ Hyett (<a href="https://github.com/pjhyett" class="user-mention">@pjhyett</a>), and Tom Preston-Werner (<a href="https://github.com/mojombo" class="user-mention">@mojombo</a>) founded GitHub.</p>
+
+<h3>Support or Contact</h3>
+
+<p>Having trouble with Pages? Check out the documentation at <a href="http://help.github.com/pages">http://help.github.com/pages</a> or contact <a href="mailto:support@github.com">support@github.com</a> and we’ll help you sort it out.</p>
+      </section>
+    </div>
+
+    
+  </body>
+</html>
